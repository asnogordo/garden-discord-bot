name: CI/CD Pipeline

on:
  push:
    branches:
      - development
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: yarn install

    - name: Run tests
      run: yarn test

  deploy-dev:
    needs: build
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Add known hosts
      run: ssh-keyscan -H ${{ secrets.DEV_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to Dev
      run: |
        ssh ${{ secrets.USERNAME }}@${{ secrets.DEV_HOST }} << EOF
          # Pull latest code in the dev directory
          cd ~/garden-discord-bot-dev
          git checkout development
          git pull origin development
          
          # Using docker compose plugin syntax (no hyphen)
          docker compose -f docker-compose.yml -f docker-compose.dev.yml down
          docker compose -f docker-compose.yml -f docker-compose.dev.yml build
          docker compose -f docker-compose.yml -f docker-compose.dev.yml up -d
          
          # Check logs for successful startup
          sleep 10
          docker compose logs --tail=20
          docker logs garden-bot-dev 2>&1 | grep -q "Logged in as" && echo "Bot successfully started" || echo "Warning: Bot might not have started properly"
        EOF

  deploy-prod:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Add known hosts
      run: ssh-keyscan -H ${{ secrets.PROD_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to Prod
      run: |
        ssh ${{ secrets.USERNAME }}@${{ secrets.PROD_HOST }} << EOF
          # Pull latest code in the prod directory
          cd ~/garden-discord-bot-prod
          git checkout main
          git pull origin main
          
          # Using docker compose plugin syntax (no hyphen)
          docker compose -f docker-compose.yml -f docker-compose.prod.yml down
          docker compose -f docker-compose.yml -f docker-compose.prod.yml build
          docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
          
          # Check logs for successful startup
          sleep 10
          docker compose logs --tail=20
          docker logs garden-bot-prod 2>&1 | grep -q "Logged in as" && echo "Bot successfully started" || echo "Warning: Bot might not have started properly"
        EOF